   0  $accept : %entry% $end

   1  command : LET var EQ expr DSC
   2          | expr DSC

   3  main : expr EOF

   4  expr : FUN ID ARROW expr
   5       | arith_expr
   6       | IF expr THEN expr ELSE expr
   7       | LET var EQ expr IN expr

   8  arith_expr : arith_expr ADD term_expr
   9             | arith_expr SUB term_expr
  10             | term_expr
  11             | app_expr

  12  app_expr : app_expr atomic_expr
  13           | atomic_expr

  14  term_expr : term_expr MUL atomic_expr
  15            | term_expr DIV atomic_expr
  16            | atomic_expr

  17  atomic_expr : literal
  18              | ID
  19              | LPAR expr RPAR

  20  literal : INT
  21          | TRUE
  22          | FALSE

  23  var : ID

  24  %entry% : '\001' main
  25          | '\002' expr
  26          | '\003' command

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	'\002'  shift 2
	'\003'  shift 3
	.  error

	%entry%  goto 4


state 1
	%entry% : '\001' . main  (24)

	INT  shift 5
	ID  shift 6
	TRUE  shift 7
	FALSE  shift 8
	LET  shift 9
	IF  shift 10
	LPAR  shift 11
	FUN  shift 12
	.  error

	main  goto 13
	expr  goto 14
	arith_expr  goto 15
	term_expr  goto 16
	app_expr  goto 17
	atomic_expr  goto 18
	literal  goto 19


state 2
	%entry% : '\002' . expr  (25)

	INT  shift 5
	ID  shift 6
	TRUE  shift 7
	FALSE  shift 8
	LET  shift 9
	IF  shift 10
	LPAR  shift 11
	FUN  shift 12
	.  error

	expr  goto 20
	arith_expr  goto 15
	term_expr  goto 16
	app_expr  goto 17
	atomic_expr  goto 18
	literal  goto 19


state 3
	%entry% : '\003' . command  (26)

	INT  shift 5
	ID  shift 6
	TRUE  shift 7
	FALSE  shift 8
	LET  shift 21
	IF  shift 10
	LPAR  shift 11
	FUN  shift 12
	.  error

	expr  goto 22
	command  goto 23
	arith_expr  goto 15
	term_expr  goto 16
	app_expr  goto 17
	atomic_expr  goto 18
	literal  goto 19


state 4
	$accept : %entry% . $end  (0)

	$end  accept


state 5
	literal : INT .  (20)

	.  reduce 20


state 6
	atomic_expr : ID .  (18)

	.  reduce 18


state 7
	literal : TRUE .  (21)

	.  reduce 21


state 8
	literal : FALSE .  (22)

	.  reduce 22


state 9
	expr : LET . var EQ expr IN expr  (7)

	ID  shift 24
	.  error

	var  goto 25


state 10
	expr : IF . expr THEN expr ELSE expr  (6)

	INT  shift 5
	ID  shift 6
	TRUE  shift 7
	FALSE  shift 8
	LET  shift 9
	IF  shift 10
	LPAR  shift 11
	FUN  shift 12
	.  error

	expr  goto 26
	arith_expr  goto 15
	term_expr  goto 16
	app_expr  goto 17
	atomic_expr  goto 18
	literal  goto 19


state 11
	atomic_expr : LPAR . expr RPAR  (19)

	INT  shift 5
	ID  shift 6
	TRUE  shift 7
	FALSE  shift 8
	LET  shift 9
	IF  shift 10
	LPAR  shift 11
	FUN  shift 12
	.  error

	expr  goto 27
	arith_expr  goto 15
	term_expr  goto 16
	app_expr  goto 17
	atomic_expr  goto 18
	literal  goto 19


state 12
	expr : FUN . ID ARROW expr  (4)

	ID  shift 28
	.  error


state 13
	%entry% : '\001' main .  (24)

	.  reduce 24


state 14
	main : expr . EOF  (3)

	EOF  shift 29
	.  error


state 15
	expr : arith_expr .  (5)
	arith_expr : arith_expr . ADD term_expr  (8)
	arith_expr : arith_expr . SUB term_expr  (9)

	ADD  shift 30
	SUB  shift 31
	$end  reduce 5
	IN  reduce 5
	THEN  reduce 5
	ELSE  reduce 5
	RPAR  reduce 5
	DSC  reduce 5
	EOF  reduce 5


state 16
	arith_expr : term_expr .  (10)
	term_expr : term_expr . MUL atomic_expr  (14)
	term_expr : term_expr . DIV atomic_expr  (15)

	MUL  shift 32
	DIV  shift 33
	$end  reduce 10
	IN  reduce 10
	THEN  reduce 10
	ELSE  reduce 10
	ADD  reduce 10
	SUB  reduce 10
	RPAR  reduce 10
	DSC  reduce 10
	EOF  reduce 10


state 17
	arith_expr : app_expr .  (11)
	app_expr : app_expr . atomic_expr  (12)

	INT  shift 5
	ID  shift 6
	TRUE  shift 7
	FALSE  shift 8
	LPAR  shift 11
	$end  reduce 11
	IN  reduce 11
	THEN  reduce 11
	ELSE  reduce 11
	ADD  reduce 11
	SUB  reduce 11
	RPAR  reduce 11
	DSC  reduce 11
	EOF  reduce 11

	atomic_expr  goto 34
	literal  goto 19


18: reduce/reduce conflict (reduce 13, reduce 16) on $end
18: reduce/reduce conflict (reduce 13, reduce 16) on IN
18: reduce/reduce conflict (reduce 13, reduce 16) on THEN
18: reduce/reduce conflict (reduce 13, reduce 16) on ELSE
18: reduce/reduce conflict (reduce 13, reduce 16) on ADD
18: reduce/reduce conflict (reduce 13, reduce 16) on SUB
18: reduce/reduce conflict (reduce 13, reduce 16) on RPAR
18: reduce/reduce conflict (reduce 13, reduce 16) on DSC
18: reduce/reduce conflict (reduce 13, reduce 16) on EOF
state 18
	app_expr : atomic_expr .  (13)
	term_expr : atomic_expr .  (16)

	$end  reduce 13
	INT  reduce 13
	ID  reduce 13
	TRUE  reduce 13
	FALSE  reduce 13
	IN  reduce 13
	THEN  reduce 13
	ELSE  reduce 13
	ADD  reduce 13
	SUB  reduce 13
	MUL  reduce 16
	DIV  reduce 16
	LPAR  reduce 13
	RPAR  reduce 13
	DSC  reduce 13
	EOF  reduce 13


state 19
	atomic_expr : literal .  (17)

	.  reduce 17


state 20
	%entry% : '\002' expr .  (25)

	.  reduce 25


state 21
	command : LET . var EQ expr DSC  (1)
	expr : LET . var EQ expr IN expr  (7)

	ID  shift 24
	.  error

	var  goto 35


state 22
	command : expr . DSC  (2)

	DSC  shift 36
	.  error


state 23
	%entry% : '\003' command .  (26)

	.  reduce 26


state 24
	var : ID .  (23)

	.  reduce 23


state 25
	expr : LET var . EQ expr IN expr  (7)

	EQ  shift 37
	.  error


state 26
	expr : IF expr . THEN expr ELSE expr  (6)

	THEN  shift 38
	.  error


state 27
	atomic_expr : LPAR expr . RPAR  (19)

	RPAR  shift 39
	.  error


state 28
	expr : FUN ID . ARROW expr  (4)

	ARROW  shift 40
	.  error


state 29
	main : expr EOF .  (3)

	.  reduce 3


state 30
	arith_expr : arith_expr ADD . term_expr  (8)

	INT  shift 5
	ID  shift 6
	TRUE  shift 7
	FALSE  shift 8
	LPAR  shift 11
	.  error

	term_expr  goto 41
	atomic_expr  goto 42
	literal  goto 19


state 31
	arith_expr : arith_expr SUB . term_expr  (9)

	INT  shift 5
	ID  shift 6
	TRUE  shift 7
	FALSE  shift 8
	LPAR  shift 11
	.  error

	term_expr  goto 43
	atomic_expr  goto 42
	literal  goto 19


state 32
	term_expr : term_expr MUL . atomic_expr  (14)

	INT  shift 5
	ID  shift 6
	TRUE  shift 7
	FALSE  shift 8
	LPAR  shift 11
	.  error

	atomic_expr  goto 44
	literal  goto 19


state 33
	term_expr : term_expr DIV . atomic_expr  (15)

	INT  shift 5
	ID  shift 6
	TRUE  shift 7
	FALSE  shift 8
	LPAR  shift 11
	.  error

	atomic_expr  goto 45
	literal  goto 19


state 34
	app_expr : app_expr atomic_expr .  (12)

	.  reduce 12


state 35
	command : LET var . EQ expr DSC  (1)
	expr : LET var . EQ expr IN expr  (7)

	EQ  shift 46
	.  error


state 36
	command : expr DSC .  (2)

	.  reduce 2


state 37
	expr : LET var EQ . expr IN expr  (7)

	INT  shift 5
	ID  shift 6
	TRUE  shift 7
	FALSE  shift 8
	LET  shift 9
	IF  shift 10
	LPAR  shift 11
	FUN  shift 12
	.  error

	expr  goto 47
	arith_expr  goto 15
	term_expr  goto 16
	app_expr  goto 17
	atomic_expr  goto 18
	literal  goto 19


state 38
	expr : IF expr THEN . expr ELSE expr  (6)

	INT  shift 5
	ID  shift 6
	TRUE  shift 7
	FALSE  shift 8
	LET  shift 9
	IF  shift 10
	LPAR  shift 11
	FUN  shift 12
	.  error

	expr  goto 48
	arith_expr  goto 15
	term_expr  goto 16
	app_expr  goto 17
	atomic_expr  goto 18
	literal  goto 19


state 39
	atomic_expr : LPAR expr RPAR .  (19)

	.  reduce 19


state 40
	expr : FUN ID ARROW . expr  (4)

	INT  shift 5
	ID  shift 6
	TRUE  shift 7
	FALSE  shift 8
	LET  shift 9
	IF  shift 10
	LPAR  shift 11
	FUN  shift 12
	.  error

	expr  goto 49
	arith_expr  goto 15
	term_expr  goto 16
	app_expr  goto 17
	atomic_expr  goto 18
	literal  goto 19


state 41
	arith_expr : arith_expr ADD term_expr .  (8)
	term_expr : term_expr . MUL atomic_expr  (14)
	term_expr : term_expr . DIV atomic_expr  (15)

	MUL  shift 32
	DIV  shift 33
	$end  reduce 8
	IN  reduce 8
	THEN  reduce 8
	ELSE  reduce 8
	ADD  reduce 8
	SUB  reduce 8
	RPAR  reduce 8
	DSC  reduce 8
	EOF  reduce 8


state 42
	term_expr : atomic_expr .  (16)

	.  reduce 16


state 43
	arith_expr : arith_expr SUB term_expr .  (9)
	term_expr : term_expr . MUL atomic_expr  (14)
	term_expr : term_expr . DIV atomic_expr  (15)

	MUL  shift 32
	DIV  shift 33
	$end  reduce 9
	IN  reduce 9
	THEN  reduce 9
	ELSE  reduce 9
	ADD  reduce 9
	SUB  reduce 9
	RPAR  reduce 9
	DSC  reduce 9
	EOF  reduce 9


state 44
	term_expr : term_expr MUL atomic_expr .  (14)

	.  reduce 14


state 45
	term_expr : term_expr DIV atomic_expr .  (15)

	.  reduce 15


state 46
	command : LET var EQ . expr DSC  (1)
	expr : LET var EQ . expr IN expr  (7)

	INT  shift 5
	ID  shift 6
	TRUE  shift 7
	FALSE  shift 8
	LET  shift 9
	IF  shift 10
	LPAR  shift 11
	FUN  shift 12
	.  error

	expr  goto 50
	arith_expr  goto 15
	term_expr  goto 16
	app_expr  goto 17
	atomic_expr  goto 18
	literal  goto 19


state 47
	expr : LET var EQ expr . IN expr  (7)

	IN  shift 51
	.  error


state 48
	expr : IF expr THEN expr . ELSE expr  (6)

	ELSE  shift 52
	.  error


state 49
	expr : FUN ID ARROW expr .  (4)

	.  reduce 4


state 50
	command : LET var EQ expr . DSC  (1)
	expr : LET var EQ expr . IN expr  (7)

	IN  shift 51
	DSC  shift 53
	.  error


state 51
	expr : LET var EQ expr IN . expr  (7)

	INT  shift 5
	ID  shift 6
	TRUE  shift 7
	FALSE  shift 8
	LET  shift 9
	IF  shift 10
	LPAR  shift 11
	FUN  shift 12
	.  error

	expr  goto 54
	arith_expr  goto 15
	term_expr  goto 16
	app_expr  goto 17
	atomic_expr  goto 18
	literal  goto 19


state 52
	expr : IF expr THEN expr ELSE . expr  (6)

	INT  shift 5
	ID  shift 6
	TRUE  shift 7
	FALSE  shift 8
	LET  shift 9
	IF  shift 10
	LPAR  shift 11
	FUN  shift 12
	.  error

	expr  goto 55
	arith_expr  goto 15
	term_expr  goto 16
	app_expr  goto 17
	atomic_expr  goto 18
	literal  goto 19


state 53
	command : LET var EQ expr DSC .  (1)

	.  reduce 1


state 54
	expr : LET var EQ expr IN expr .  (7)

	.  reduce 7


state 55
	expr : IF expr THEN expr ELSE expr .  (6)

	.  reduce 6


State 18 contains 9 reduce/reduce conflicts.


26 terminals, 11 nonterminals
27 grammar rules, 56 states
