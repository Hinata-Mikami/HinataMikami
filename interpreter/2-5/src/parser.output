   0  $accept : %entry% $end

   1  command : LET var EQ expr DSC
   2          | LET REC var var EQ expr and_command
   3          | expr DSC

   4  and_command : AND var var EQ expr and_command
   5              | DSC

   6  main : expr EOF

   7  expr : FUN ID ARROW expr
   8       | arith_expr
   9       | IF expr THEN expr ELSE expr
  10       | LET var EQ expr IN expr
  11       | LET REC var var rec_expr IN expr
  12       | LET REC var var EQ expr and_expr expr
  13       | MATCH expr WITH match_pattern
  14       | expr CONS expr

  15  rec_expr : EQ expr
  16           | var rec_expr

  17  and_expr : AND var var EQ expr and_expr
  18           | IN

  19  arith_expr : arith_expr ADD arith_expr
  20             | arith_expr SUB arith_expr
  21             | arith_expr MUL arith_expr
  22             | arith_expr DIV arith_expr
  23             | arith_expr EQ arith_expr
  24             | arith_expr LT arith_expr
  25             | app_expr

  26  app_expr : app_expr atomic_expr
  27           | atomic_expr

  28  match_pattern : pattern ARROW expr patterns
  29                | pattern ARROW expr END

  30  patterns : OR pattern ARROW expr patterns
  31           | OR pattern ARROW expr END

  32  pattern : INT
  33          | TRUE
  34          | FALSE
  35          | ID
  36          | LPAR pattern COMMA pattern ptuple
  37          | LBPAR RBPAR
  38          | pattern CONS pattern
  39          | WILD

  40  ptuple : COMMA pattern ptuple
  41         | RPAR

  42  atomic_expr : literal
  43              | ID
  44              | LPAR expr RPAR
  45              | LPAR expr COMMA expr tuple
  46              | LBPAR RBPAR
  47              | LBPAR expr lists

  48  tuple : COMMA expr tuple
  49        | RPAR

  50  lists : SSC expr lists
  51        | RBPAR

  52  literal : INT
  53          | TRUE
  54          | FALSE

  55  var : ID

  56  %entry% : '\001' main
  57          | '\002' expr
  58          | '\003' command
  59          | '\004' pattern

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	'\002'  shift 2
	'\003'  shift 3
	'\004'  shift 4
	.  error

	%entry%  goto 5


state 1
	%entry% : '\001' . main  (56)

	INT  shift 6
	ID  shift 7
	TRUE  shift 8
	FALSE  shift 9
	LET  shift 10
	IF  shift 11
	LPAR  shift 12
	FUN  shift 13
	MATCH  shift 14
	LBPAR  shift 15
	.  error

	main  goto 16
	expr  goto 17
	arith_expr  goto 18
	app_expr  goto 19
	atomic_expr  goto 20
	literal  goto 21


state 2
	%entry% : '\002' . expr  (57)

	INT  shift 6
	ID  shift 7
	TRUE  shift 8
	FALSE  shift 9
	LET  shift 10
	IF  shift 11
	LPAR  shift 12
	FUN  shift 13
	MATCH  shift 14
	LBPAR  shift 15
	.  error

	expr  goto 22
	arith_expr  goto 18
	app_expr  goto 19
	atomic_expr  goto 20
	literal  goto 21


state 3
	%entry% : '\003' . command  (58)

	INT  shift 6
	ID  shift 7
	TRUE  shift 8
	FALSE  shift 9
	LET  shift 23
	IF  shift 11
	LPAR  shift 12
	FUN  shift 13
	MATCH  shift 14
	LBPAR  shift 15
	.  error

	expr  goto 24
	command  goto 25
	arith_expr  goto 18
	app_expr  goto 19
	atomic_expr  goto 20
	literal  goto 21


state 4
	%entry% : '\004' . pattern  (59)

	INT  shift 26
	ID  shift 27
	TRUE  shift 28
	FALSE  shift 29
	LPAR  shift 30
	LBPAR  shift 31
	WILD  shift 32
	.  error

	pattern  goto 33


state 5
	$accept : %entry% . $end  (0)

	$end  accept


state 6
	literal : INT .  (52)

	.  reduce 52


state 7
	atomic_expr : ID .  (43)

	.  reduce 43


state 8
	literal : TRUE .  (53)

	.  reduce 53


state 9
	literal : FALSE .  (54)

	.  reduce 54


state 10
	expr : LET . var EQ expr IN expr  (10)
	expr : LET . REC var var rec_expr IN expr  (11)
	expr : LET . REC var var EQ expr and_expr expr  (12)

	ID  shift 34
	REC  shift 35
	.  error

	var  goto 36


state 11
	expr : IF . expr THEN expr ELSE expr  (9)

	INT  shift 6
	ID  shift 7
	TRUE  shift 8
	FALSE  shift 9
	LET  shift 10
	IF  shift 11
	LPAR  shift 12
	FUN  shift 13
	MATCH  shift 14
	LBPAR  shift 15
	.  error

	expr  goto 37
	arith_expr  goto 18
	app_expr  goto 19
	atomic_expr  goto 20
	literal  goto 21


state 12
	atomic_expr : LPAR . expr RPAR  (44)
	atomic_expr : LPAR . expr COMMA expr tuple  (45)

	INT  shift 6
	ID  shift 7
	TRUE  shift 8
	FALSE  shift 9
	LET  shift 10
	IF  shift 11
	LPAR  shift 12
	FUN  shift 13
	MATCH  shift 14
	LBPAR  shift 15
	.  error

	expr  goto 38
	arith_expr  goto 18
	app_expr  goto 19
	atomic_expr  goto 20
	literal  goto 21


state 13
	expr : FUN . ID ARROW expr  (7)

	ID  shift 39
	.  error


state 14
	expr : MATCH . expr WITH match_pattern  (13)

	INT  shift 6
	ID  shift 7
	TRUE  shift 8
	FALSE  shift 9
	LET  shift 10
	IF  shift 11
	LPAR  shift 12
	FUN  shift 13
	MATCH  shift 14
	LBPAR  shift 15
	.  error

	expr  goto 40
	arith_expr  goto 18
	app_expr  goto 19
	atomic_expr  goto 20
	literal  goto 21


state 15
	atomic_expr : LBPAR . RBPAR  (46)
	atomic_expr : LBPAR . expr lists  (47)

	INT  shift 6
	ID  shift 7
	TRUE  shift 8
	FALSE  shift 9
	LET  shift 10
	IF  shift 11
	LPAR  shift 12
	FUN  shift 13
	MATCH  shift 14
	LBPAR  shift 15
	RBPAR  shift 41
	.  error

	expr  goto 42
	arith_expr  goto 18
	app_expr  goto 19
	atomic_expr  goto 20
	literal  goto 21


state 16
	%entry% : '\001' main .  (56)

	.  reduce 56


state 17
	main : expr . EOF  (6)
	expr : expr . CONS expr  (14)

	EOF  shift 43
	CONS  shift 44
	.  error


state 18
	expr : arith_expr .  (8)
	arith_expr : arith_expr . ADD arith_expr  (19)
	arith_expr : arith_expr . SUB arith_expr  (20)
	arith_expr : arith_expr . MUL arith_expr  (21)
	arith_expr : arith_expr . DIV arith_expr  (22)
	arith_expr : arith_expr . EQ arith_expr  (23)
	arith_expr : arith_expr . LT arith_expr  (24)

	EQ  shift 45
	ADD  shift 46
	SUB  shift 47
	MUL  shift 48
	DIV  shift 49
	LT  shift 50
	$end  reduce 8
	IN  reduce 8
	THEN  reduce 8
	ELSE  reduce 8
	RPAR  reduce 8
	DSC  reduce 8
	SSC  reduce 8
	EOF  reduce 8
	WITH  reduce 8
	OR  reduce 8
	END  reduce 8
	COMMA  reduce 8
	RBPAR  reduce 8
	CONS  reduce 8
	AND  reduce 8


state 19
	arith_expr : app_expr .  (25)
	app_expr : app_expr . atomic_expr  (26)

	INT  shift 6
	ID  shift 7
	TRUE  shift 8
	FALSE  shift 9
	LPAR  shift 12
	LBPAR  shift 15
	$end  reduce 25
	IN  reduce 25
	EQ  reduce 25
	THEN  reduce 25
	ELSE  reduce 25
	ADD  reduce 25
	SUB  reduce 25
	MUL  reduce 25
	DIV  reduce 25
	LT  reduce 25
	RPAR  reduce 25
	DSC  reduce 25
	SSC  reduce 25
	EOF  reduce 25
	WITH  reduce 25
	OR  reduce 25
	END  reduce 25
	COMMA  reduce 25
	RBPAR  reduce 25
	CONS  reduce 25
	AND  reduce 25

	atomic_expr  goto 51
	literal  goto 21


state 20
	app_expr : atomic_expr .  (27)

	.  reduce 27


state 21
	atomic_expr : literal .  (42)

	.  reduce 42


state 22
	expr : expr . CONS expr  (14)
	%entry% : '\002' expr .  (57)

	CONS  shift 44
	$end  reduce 57


state 23
	command : LET . var EQ expr DSC  (1)
	command : LET . REC var var EQ expr and_command  (2)
	expr : LET . var EQ expr IN expr  (10)
	expr : LET . REC var var rec_expr IN expr  (11)
	expr : LET . REC var var EQ expr and_expr expr  (12)

	ID  shift 34
	REC  shift 52
	.  error

	var  goto 53


state 24
	command : expr . DSC  (3)
	expr : expr . CONS expr  (14)

	DSC  shift 54
	CONS  shift 44
	.  error


state 25
	%entry% : '\003' command .  (58)

	.  reduce 58


state 26
	pattern : INT .  (32)

	.  reduce 32


state 27
	pattern : ID .  (35)

	.  reduce 35


state 28
	pattern : TRUE .  (33)

	.  reduce 33


state 29
	pattern : FALSE .  (34)

	.  reduce 34


state 30
	pattern : LPAR . pattern COMMA pattern ptuple  (36)

	INT  shift 26
	ID  shift 27
	TRUE  shift 28
	FALSE  shift 29
	LPAR  shift 30
	LBPAR  shift 31
	WILD  shift 32
	.  error

	pattern  goto 55


state 31
	pattern : LBPAR . RBPAR  (37)

	RBPAR  shift 56
	.  error


state 32
	pattern : WILD .  (39)

	.  reduce 39


state 33
	pattern : pattern . CONS pattern  (38)
	%entry% : '\004' pattern .  (59)

	CONS  shift 57
	$end  reduce 59


state 34
	var : ID .  (55)

	.  reduce 55


state 35
	expr : LET REC . var var rec_expr IN expr  (11)
	expr : LET REC . var var EQ expr and_expr expr  (12)

	ID  shift 34
	.  error

	var  goto 58


state 36
	expr : LET var . EQ expr IN expr  (10)

	EQ  shift 59
	.  error


state 37
	expr : IF expr . THEN expr ELSE expr  (9)
	expr : expr . CONS expr  (14)

	THEN  shift 60
	CONS  shift 44
	.  error


state 38
	expr : expr . CONS expr  (14)
	atomic_expr : LPAR expr . RPAR  (44)
	atomic_expr : LPAR expr . COMMA expr tuple  (45)

	RPAR  shift 61
	COMMA  shift 62
	CONS  shift 44
	.  error


state 39
	expr : FUN ID . ARROW expr  (7)

	ARROW  shift 63
	.  error


state 40
	expr : MATCH expr . WITH match_pattern  (13)
	expr : expr . CONS expr  (14)

	WITH  shift 64
	CONS  shift 44
	.  error


state 41
	atomic_expr : LBPAR RBPAR .  (46)

	.  reduce 46


state 42
	expr : expr . CONS expr  (14)
	atomic_expr : LBPAR expr . lists  (47)

	SSC  shift 65
	RBPAR  shift 66
	CONS  shift 44
	.  error

	lists  goto 67


state 43
	main : expr EOF .  (6)

	.  reduce 6


state 44
	expr : expr CONS . expr  (14)

	INT  shift 6
	ID  shift 7
	TRUE  shift 8
	FALSE  shift 9
	LET  shift 10
	IF  shift 11
	LPAR  shift 12
	FUN  shift 13
	MATCH  shift 14
	LBPAR  shift 15
	.  error

	expr  goto 68
	arith_expr  goto 18
	app_expr  goto 19
	atomic_expr  goto 20
	literal  goto 21


state 45
	arith_expr : arith_expr EQ . arith_expr  (23)

	INT  shift 6
	ID  shift 7
	TRUE  shift 8
	FALSE  shift 9
	LPAR  shift 12
	LBPAR  shift 15
	.  error

	arith_expr  goto 69
	app_expr  goto 19
	atomic_expr  goto 20
	literal  goto 21


state 46
	arith_expr : arith_expr ADD . arith_expr  (19)

	INT  shift 6
	ID  shift 7
	TRUE  shift 8
	FALSE  shift 9
	LPAR  shift 12
	LBPAR  shift 15
	.  error

	arith_expr  goto 70
	app_expr  goto 19
	atomic_expr  goto 20
	literal  goto 21


state 47
	arith_expr : arith_expr SUB . arith_expr  (20)

	INT  shift 6
	ID  shift 7
	TRUE  shift 8
	FALSE  shift 9
	LPAR  shift 12
	LBPAR  shift 15
	.  error

	arith_expr  goto 71
	app_expr  goto 19
	atomic_expr  goto 20
	literal  goto 21


state 48
	arith_expr : arith_expr MUL . arith_expr  (21)

	INT  shift 6
	ID  shift 7
	TRUE  shift 8
	FALSE  shift 9
	LPAR  shift 12
	LBPAR  shift 15
	.  error

	arith_expr  goto 72
	app_expr  goto 19
	atomic_expr  goto 20
	literal  goto 21


state 49
	arith_expr : arith_expr DIV . arith_expr  (22)

	INT  shift 6
	ID  shift 7
	TRUE  shift 8
	FALSE  shift 9
	LPAR  shift 12
	LBPAR  shift 15
	.  error

	arith_expr  goto 73
	app_expr  goto 19
	atomic_expr  goto 20
	literal  goto 21


state 50
	arith_expr : arith_expr LT . arith_expr  (24)

	INT  shift 6
	ID  shift 7
	TRUE  shift 8
	FALSE  shift 9
	LPAR  shift 12
	LBPAR  shift 15
	.  error

	arith_expr  goto 74
	app_expr  goto 19
	atomic_expr  goto 20
	literal  goto 21


state 51
	app_expr : app_expr atomic_expr .  (26)

	.  reduce 26


state 52
	command : LET REC . var var EQ expr and_command  (2)
	expr : LET REC . var var rec_expr IN expr  (11)
	expr : LET REC . var var EQ expr and_expr expr  (12)

	ID  shift 34
	.  error

	var  goto 75


state 53
	command : LET var . EQ expr DSC  (1)
	expr : LET var . EQ expr IN expr  (10)

	EQ  shift 76
	.  error


state 54
	command : expr DSC .  (3)

	.  reduce 3


state 55
	pattern : LPAR pattern . COMMA pattern ptuple  (36)
	pattern : pattern . CONS pattern  (38)

	COMMA  shift 77
	CONS  shift 57
	.  error


state 56
	pattern : LBPAR RBPAR .  (37)

	.  reduce 37


state 57
	pattern : pattern CONS . pattern  (38)

	INT  shift 26
	ID  shift 27
	TRUE  shift 28
	FALSE  shift 29
	LPAR  shift 30
	LBPAR  shift 31
	WILD  shift 32
	.  error

	pattern  goto 78


state 58
	expr : LET REC var . var rec_expr IN expr  (11)
	expr : LET REC var . var EQ expr and_expr expr  (12)

	ID  shift 34
	.  error

	var  goto 79


state 59
	expr : LET var EQ . expr IN expr  (10)

	INT  shift 6
	ID  shift 7
	TRUE  shift 8
	FALSE  shift 9
	LET  shift 10
	IF  shift 11
	LPAR  shift 12
	FUN  shift 13
	MATCH  shift 14
	LBPAR  shift 15
	.  error

	expr  goto 80
	arith_expr  goto 18
	app_expr  goto 19
	atomic_expr  goto 20
	literal  goto 21


state 60
	expr : IF expr THEN . expr ELSE expr  (9)

	INT  shift 6
	ID  shift 7
	TRUE  shift 8
	FALSE  shift 9
	LET  shift 10
	IF  shift 11
	LPAR  shift 12
	FUN  shift 13
	MATCH  shift 14
	LBPAR  shift 15
	.  error

	expr  goto 81
	arith_expr  goto 18
	app_expr  goto 19
	atomic_expr  goto 20
	literal  goto 21


state 61
	atomic_expr : LPAR expr RPAR .  (44)

	.  reduce 44


state 62
	atomic_expr : LPAR expr COMMA . expr tuple  (45)

	INT  shift 6
	ID  shift 7
	TRUE  shift 8
	FALSE  shift 9
	LET  shift 10
	IF  shift 11
	LPAR  shift 12
	FUN  shift 13
	MATCH  shift 14
	LBPAR  shift 15
	.  error

	expr  goto 82
	arith_expr  goto 18
	app_expr  goto 19
	atomic_expr  goto 20
	literal  goto 21


state 63
	expr : FUN ID ARROW . expr  (7)

	INT  shift 6
	ID  shift 7
	TRUE  shift 8
	FALSE  shift 9
	LET  shift 10
	IF  shift 11
	LPAR  shift 12
	FUN  shift 13
	MATCH  shift 14
	LBPAR  shift 15
	.  error

	expr  goto 83
	arith_expr  goto 18
	app_expr  goto 19
	atomic_expr  goto 20
	literal  goto 21


state 64
	expr : MATCH expr WITH . match_pattern  (13)

	INT  shift 26
	ID  shift 27
	TRUE  shift 28
	FALSE  shift 29
	LPAR  shift 30
	LBPAR  shift 31
	WILD  shift 32
	.  error

	pattern  goto 84
	match_pattern  goto 85


state 65
	lists : SSC . expr lists  (50)

	INT  shift 6
	ID  shift 7
	TRUE  shift 8
	FALSE  shift 9
	LET  shift 10
	IF  shift 11
	LPAR  shift 12
	FUN  shift 13
	MATCH  shift 14
	LBPAR  shift 15
	.  error

	expr  goto 86
	arith_expr  goto 18
	app_expr  goto 19
	atomic_expr  goto 20
	literal  goto 21


state 66
	lists : RBPAR .  (51)

	.  reduce 51


state 67
	atomic_expr : LBPAR expr lists .  (47)

	.  reduce 47


state 68
	expr : expr . CONS expr  (14)
	expr : expr CONS expr .  (14)

	CONS  shift 44
	$end  reduce 14
	IN  reduce 14
	THEN  reduce 14
	ELSE  reduce 14
	RPAR  reduce 14
	DSC  reduce 14
	SSC  reduce 14
	EOF  reduce 14
	WITH  reduce 14
	OR  reduce 14
	END  reduce 14
	COMMA  reduce 14
	RBPAR  reduce 14
	AND  reduce 14


state 69
	arith_expr : arith_expr . ADD arith_expr  (19)
	arith_expr : arith_expr . SUB arith_expr  (20)
	arith_expr : arith_expr . MUL arith_expr  (21)
	arith_expr : arith_expr . DIV arith_expr  (22)
	arith_expr : arith_expr . EQ arith_expr  (23)
	arith_expr : arith_expr EQ arith_expr .  (23)
	arith_expr : arith_expr . LT arith_expr  (24)

	ADD  shift 46
	SUB  shift 47
	MUL  shift 48
	DIV  shift 49
	$end  reduce 23
	IN  reduce 23
	EQ  reduce 23
	THEN  reduce 23
	ELSE  reduce 23
	LT  reduce 23
	RPAR  reduce 23
	DSC  reduce 23
	SSC  reduce 23
	EOF  reduce 23
	WITH  reduce 23
	OR  reduce 23
	END  reduce 23
	COMMA  reduce 23
	RBPAR  reduce 23
	CONS  reduce 23
	AND  reduce 23


state 70
	arith_expr : arith_expr . ADD arith_expr  (19)
	arith_expr : arith_expr ADD arith_expr .  (19)
	arith_expr : arith_expr . SUB arith_expr  (20)
	arith_expr : arith_expr . MUL arith_expr  (21)
	arith_expr : arith_expr . DIV arith_expr  (22)
	arith_expr : arith_expr . EQ arith_expr  (23)
	arith_expr : arith_expr . LT arith_expr  (24)

	MUL  shift 48
	DIV  shift 49
	$end  reduce 19
	IN  reduce 19
	EQ  reduce 19
	THEN  reduce 19
	ELSE  reduce 19
	ADD  reduce 19
	SUB  reduce 19
	LT  reduce 19
	RPAR  reduce 19
	DSC  reduce 19
	SSC  reduce 19
	EOF  reduce 19
	WITH  reduce 19
	OR  reduce 19
	END  reduce 19
	COMMA  reduce 19
	RBPAR  reduce 19
	CONS  reduce 19
	AND  reduce 19


state 71
	arith_expr : arith_expr . ADD arith_expr  (19)
	arith_expr : arith_expr . SUB arith_expr  (20)
	arith_expr : arith_expr SUB arith_expr .  (20)
	arith_expr : arith_expr . MUL arith_expr  (21)
	arith_expr : arith_expr . DIV arith_expr  (22)
	arith_expr : arith_expr . EQ arith_expr  (23)
	arith_expr : arith_expr . LT arith_expr  (24)

	MUL  shift 48
	DIV  shift 49
	$end  reduce 20
	IN  reduce 20
	EQ  reduce 20
	THEN  reduce 20
	ELSE  reduce 20
	ADD  reduce 20
	SUB  reduce 20
	LT  reduce 20
	RPAR  reduce 20
	DSC  reduce 20
	SSC  reduce 20
	EOF  reduce 20
	WITH  reduce 20
	OR  reduce 20
	END  reduce 20
	COMMA  reduce 20
	RBPAR  reduce 20
	CONS  reduce 20
	AND  reduce 20


state 72
	arith_expr : arith_expr . ADD arith_expr  (19)
	arith_expr : arith_expr . SUB arith_expr  (20)
	arith_expr : arith_expr . MUL arith_expr  (21)
	arith_expr : arith_expr MUL arith_expr .  (21)
	arith_expr : arith_expr . DIV arith_expr  (22)
	arith_expr : arith_expr . EQ arith_expr  (23)
	arith_expr : arith_expr . LT arith_expr  (24)

	.  reduce 21


state 73
	arith_expr : arith_expr . ADD arith_expr  (19)
	arith_expr : arith_expr . SUB arith_expr  (20)
	arith_expr : arith_expr . MUL arith_expr  (21)
	arith_expr : arith_expr . DIV arith_expr  (22)
	arith_expr : arith_expr DIV arith_expr .  (22)
	arith_expr : arith_expr . EQ arith_expr  (23)
	arith_expr : arith_expr . LT arith_expr  (24)

	.  reduce 22


state 74
	arith_expr : arith_expr . ADD arith_expr  (19)
	arith_expr : arith_expr . SUB arith_expr  (20)
	arith_expr : arith_expr . MUL arith_expr  (21)
	arith_expr : arith_expr . DIV arith_expr  (22)
	arith_expr : arith_expr . EQ arith_expr  (23)
	arith_expr : arith_expr . LT arith_expr  (24)
	arith_expr : arith_expr LT arith_expr .  (24)

	ADD  shift 46
	SUB  shift 47
	MUL  shift 48
	DIV  shift 49
	$end  reduce 24
	IN  reduce 24
	EQ  reduce 24
	THEN  reduce 24
	ELSE  reduce 24
	LT  reduce 24
	RPAR  reduce 24
	DSC  reduce 24
	SSC  reduce 24
	EOF  reduce 24
	WITH  reduce 24
	OR  reduce 24
	END  reduce 24
	COMMA  reduce 24
	RBPAR  reduce 24
	CONS  reduce 24
	AND  reduce 24


state 75
	command : LET REC var . var EQ expr and_command  (2)
	expr : LET REC var . var rec_expr IN expr  (11)
	expr : LET REC var . var EQ expr and_expr expr  (12)

	ID  shift 34
	.  error

	var  goto 87


state 76
	command : LET var EQ . expr DSC  (1)
	expr : LET var EQ . expr IN expr  (10)

	INT  shift 6
	ID  shift 7
	TRUE  shift 8
	FALSE  shift 9
	LET  shift 10
	IF  shift 11
	LPAR  shift 12
	FUN  shift 13
	MATCH  shift 14
	LBPAR  shift 15
	.  error

	expr  goto 88
	arith_expr  goto 18
	app_expr  goto 19
	atomic_expr  goto 20
	literal  goto 21


state 77
	pattern : LPAR pattern COMMA . pattern ptuple  (36)

	INT  shift 26
	ID  shift 27
	TRUE  shift 28
	FALSE  shift 29
	LPAR  shift 30
	LBPAR  shift 31
	WILD  shift 32
	.  error

	pattern  goto 89


state 78
	pattern : pattern . CONS pattern  (38)
	pattern : pattern CONS pattern .  (38)

	CONS  shift 57
	$end  reduce 38
	RPAR  reduce 38
	ARROW  reduce 38
	COMMA  reduce 38


state 79
	expr : LET REC var var . rec_expr IN expr  (11)
	expr : LET REC var var . EQ expr and_expr expr  (12)

	ID  shift 34
	EQ  shift 90
	.  error

	var  goto 91
	rec_expr  goto 92


state 80
	expr : LET var EQ expr . IN expr  (10)
	expr : expr . CONS expr  (14)

	IN  shift 93
	CONS  shift 44
	.  error


state 81
	expr : IF expr THEN expr . ELSE expr  (9)
	expr : expr . CONS expr  (14)

	ELSE  shift 94
	CONS  shift 44
	.  error


state 82
	expr : expr . CONS expr  (14)
	atomic_expr : LPAR expr COMMA expr . tuple  (45)

	RPAR  shift 95
	COMMA  shift 96
	CONS  shift 44
	.  error

	tuple  goto 97


state 83
	expr : FUN ID ARROW expr .  (7)
	expr : expr . CONS expr  (14)

	CONS  shift 44
	$end  reduce 7
	IN  reduce 7
	THEN  reduce 7
	ELSE  reduce 7
	RPAR  reduce 7
	DSC  reduce 7
	SSC  reduce 7
	EOF  reduce 7
	WITH  reduce 7
	OR  reduce 7
	END  reduce 7
	COMMA  reduce 7
	RBPAR  reduce 7
	AND  reduce 7


state 84
	match_pattern : pattern . ARROW expr patterns  (28)
	match_pattern : pattern . ARROW expr END  (29)
	pattern : pattern . CONS pattern  (38)

	ARROW  shift 98
	CONS  shift 57
	.  error


state 85
	expr : MATCH expr WITH match_pattern .  (13)

	.  reduce 13


state 86
	expr : expr . CONS expr  (14)
	lists : SSC expr . lists  (50)

	SSC  shift 65
	RBPAR  shift 66
	CONS  shift 44
	.  error

	lists  goto 99


state 87
	command : LET REC var var . EQ expr and_command  (2)
	expr : LET REC var var . rec_expr IN expr  (11)
	expr : LET REC var var . EQ expr and_expr expr  (12)

	ID  shift 34
	EQ  shift 100
	.  error

	var  goto 91
	rec_expr  goto 92


state 88
	command : LET var EQ expr . DSC  (1)
	expr : LET var EQ expr . IN expr  (10)
	expr : expr . CONS expr  (14)

	IN  shift 93
	DSC  shift 101
	CONS  shift 44
	.  error


state 89
	pattern : LPAR pattern COMMA pattern . ptuple  (36)
	pattern : pattern . CONS pattern  (38)

	RPAR  shift 102
	COMMA  shift 103
	CONS  shift 57
	.  error

	ptuple  goto 104


state 90
	expr : LET REC var var EQ . expr and_expr expr  (12)
	rec_expr : EQ . expr  (15)

	INT  shift 6
	ID  shift 7
	TRUE  shift 8
	FALSE  shift 9
	LET  shift 10
	IF  shift 11
	LPAR  shift 12
	FUN  shift 13
	MATCH  shift 14
	LBPAR  shift 15
	.  error

	expr  goto 105
	arith_expr  goto 18
	app_expr  goto 19
	atomic_expr  goto 20
	literal  goto 21


state 91
	rec_expr : var . rec_expr  (16)

	ID  shift 34
	EQ  shift 106
	.  error

	var  goto 91
	rec_expr  goto 107


state 92
	expr : LET REC var var rec_expr . IN expr  (11)

	IN  shift 108
	.  error


state 93
	expr : LET var EQ expr IN . expr  (10)

	INT  shift 6
	ID  shift 7
	TRUE  shift 8
	FALSE  shift 9
	LET  shift 10
	IF  shift 11
	LPAR  shift 12
	FUN  shift 13
	MATCH  shift 14
	LBPAR  shift 15
	.  error

	expr  goto 109
	arith_expr  goto 18
	app_expr  goto 19
	atomic_expr  goto 20
	literal  goto 21


state 94
	expr : IF expr THEN expr ELSE . expr  (9)

	INT  shift 6
	ID  shift 7
	TRUE  shift 8
	FALSE  shift 9
	LET  shift 10
	IF  shift 11
	LPAR  shift 12
	FUN  shift 13
	MATCH  shift 14
	LBPAR  shift 15
	.  error

	expr  goto 110
	arith_expr  goto 18
	app_expr  goto 19
	atomic_expr  goto 20
	literal  goto 21


state 95
	tuple : RPAR .  (49)

	.  reduce 49


state 96
	tuple : COMMA . expr tuple  (48)

	INT  shift 6
	ID  shift 7
	TRUE  shift 8
	FALSE  shift 9
	LET  shift 10
	IF  shift 11
	LPAR  shift 12
	FUN  shift 13
	MATCH  shift 14
	LBPAR  shift 15
	.  error

	expr  goto 111
	arith_expr  goto 18
	app_expr  goto 19
	atomic_expr  goto 20
	literal  goto 21


state 97
	atomic_expr : LPAR expr COMMA expr tuple .  (45)

	.  reduce 45


state 98
	match_pattern : pattern ARROW . expr patterns  (28)
	match_pattern : pattern ARROW . expr END  (29)

	INT  shift 6
	ID  shift 7
	TRUE  shift 8
	FALSE  shift 9
	LET  shift 10
	IF  shift 11
	LPAR  shift 12
	FUN  shift 13
	MATCH  shift 14
	LBPAR  shift 15
	.  error

	expr  goto 112
	arith_expr  goto 18
	app_expr  goto 19
	atomic_expr  goto 20
	literal  goto 21


state 99
	lists : SSC expr lists .  (50)

	.  reduce 50


state 100
	command : LET REC var var EQ . expr and_command  (2)
	expr : LET REC var var EQ . expr and_expr expr  (12)
	rec_expr : EQ . expr  (15)

	INT  shift 6
	ID  shift 7
	TRUE  shift 8
	FALSE  shift 9
	LET  shift 10
	IF  shift 11
	LPAR  shift 12
	FUN  shift 13
	MATCH  shift 14
	LBPAR  shift 15
	.  error

	expr  goto 113
	arith_expr  goto 18
	app_expr  goto 19
	atomic_expr  goto 20
	literal  goto 21


state 101
	command : LET var EQ expr DSC .  (1)

	.  reduce 1


state 102
	ptuple : RPAR .  (41)

	.  reduce 41


state 103
	ptuple : COMMA . pattern ptuple  (40)

	INT  shift 26
	ID  shift 27
	TRUE  shift 28
	FALSE  shift 29
	LPAR  shift 30
	LBPAR  shift 31
	WILD  shift 32
	.  error

	pattern  goto 114


state 104
	pattern : LPAR pattern COMMA pattern ptuple .  (36)

	.  reduce 36


state 105
	expr : LET REC var var EQ expr . and_expr expr  (12)
	expr : expr . CONS expr  (14)
	rec_expr : EQ expr .  (15)

	CONS  shift 44
	AND  shift 116
	IN  reduce 15

	and_expr  goto 117


state 106
	rec_expr : EQ . expr  (15)

	INT  shift 6
	ID  shift 7
	TRUE  shift 8
	FALSE  shift 9
	LET  shift 10
	IF  shift 11
	LPAR  shift 12
	FUN  shift 13
	MATCH  shift 14
	LBPAR  shift 15
	.  error

	expr  goto 118
	arith_expr  goto 18
	app_expr  goto 19
	atomic_expr  goto 20
	literal  goto 21


state 107
	rec_expr : var rec_expr .  (16)

	.  reduce 16


state 108
	expr : LET REC var var rec_expr IN . expr  (11)

	INT  shift 6
	ID  shift 7
	TRUE  shift 8
	FALSE  shift 9
	LET  shift 10
	IF  shift 11
	LPAR  shift 12
	FUN  shift 13
	MATCH  shift 14
	LBPAR  shift 15
	.  error

	expr  goto 119
	arith_expr  goto 18
	app_expr  goto 19
	atomic_expr  goto 20
	literal  goto 21


state 109
	expr : LET var EQ expr IN expr .  (10)
	expr : expr . CONS expr  (14)

	CONS  shift 44
	$end  reduce 10
	IN  reduce 10
	THEN  reduce 10
	ELSE  reduce 10
	RPAR  reduce 10
	DSC  reduce 10
	SSC  reduce 10
	EOF  reduce 10
	WITH  reduce 10
	OR  reduce 10
	END  reduce 10
	COMMA  reduce 10
	RBPAR  reduce 10
	AND  reduce 10


state 110
	expr : IF expr THEN expr ELSE expr .  (9)
	expr : expr . CONS expr  (14)

	CONS  shift 44
	$end  reduce 9
	IN  reduce 9
	THEN  reduce 9
	ELSE  reduce 9
	RPAR  reduce 9
	DSC  reduce 9
	SSC  reduce 9
	EOF  reduce 9
	WITH  reduce 9
	OR  reduce 9
	END  reduce 9
	COMMA  reduce 9
	RBPAR  reduce 9
	AND  reduce 9


state 111
	expr : expr . CONS expr  (14)
	tuple : COMMA expr . tuple  (48)

	RPAR  shift 95
	COMMA  shift 96
	CONS  shift 44
	.  error

	tuple  goto 120


state 112
	expr : expr . CONS expr  (14)
	match_pattern : pattern ARROW expr . patterns  (28)
	match_pattern : pattern ARROW expr . END  (29)

	OR  shift 121
	END  shift 122
	CONS  shift 44
	.  error

	patterns  goto 123


state 113
	command : LET REC var var EQ expr . and_command  (2)
	expr : LET REC var var EQ expr . and_expr expr  (12)
	expr : expr . CONS expr  (14)
	rec_expr : EQ expr .  (15)

	DSC  shift 124
	CONS  shift 44
	AND  shift 125
	IN  reduce 15

	and_command  goto 126
	and_expr  goto 117


state 114
	pattern : pattern . CONS pattern  (38)
	ptuple : COMMA pattern . ptuple  (40)

	RPAR  shift 102
	COMMA  shift 103
	CONS  shift 57
	.  error

	ptuple  goto 127


state 115
	and_expr : IN .  (18)

	.  reduce 18


state 116
	and_expr : AND . var var EQ expr and_expr  (17)

	ID  shift 34
	.  error

	var  goto 128


state 117
	expr : LET REC var var EQ expr and_expr . expr  (12)

	INT  shift 6
	ID  shift 7
	TRUE  shift 8
	FALSE  shift 9
	LET  shift 10
	IF  shift 11
	LPAR  shift 12
	FUN  shift 13
	MATCH  shift 14
	LBPAR  shift 15
	.  error

	expr  goto 129
	arith_expr  goto 18
	app_expr  goto 19
	atomic_expr  goto 20
	literal  goto 21


state 118
	expr : expr . CONS expr  (14)
	rec_expr : EQ expr .  (15)

	CONS  shift 44
	IN  reduce 15


state 119
	expr : LET REC var var rec_expr IN expr .  (11)
	expr : expr . CONS expr  (14)

	CONS  shift 44
	$end  reduce 11
	IN  reduce 11
	THEN  reduce 11
	ELSE  reduce 11
	RPAR  reduce 11
	DSC  reduce 11
	SSC  reduce 11
	EOF  reduce 11
	WITH  reduce 11
	OR  reduce 11
	END  reduce 11
	COMMA  reduce 11
	RBPAR  reduce 11
	AND  reduce 11


state 120
	tuple : COMMA expr tuple .  (48)

	.  reduce 48


state 121
	patterns : OR . pattern ARROW expr patterns  (30)
	patterns : OR . pattern ARROW expr END  (31)

	INT  shift 26
	ID  shift 27
	TRUE  shift 28
	FALSE  shift 29
	LPAR  shift 30
	LBPAR  shift 31
	WILD  shift 32
	.  error

	pattern  goto 130


state 122
	match_pattern : pattern ARROW expr END .  (29)

	.  reduce 29


state 123
	match_pattern : pattern ARROW expr patterns .  (28)

	.  reduce 28


state 124
	and_command : DSC .  (5)

	.  reduce 5


state 125
	and_command : AND . var var EQ expr and_command  (4)
	and_expr : AND . var var EQ expr and_expr  (17)

	ID  shift 34
	.  error

	var  goto 131


state 126
	command : LET REC var var EQ expr and_command .  (2)

	.  reduce 2


state 127
	ptuple : COMMA pattern ptuple .  (40)

	.  reduce 40


state 128
	and_expr : AND var . var EQ expr and_expr  (17)

	ID  shift 34
	.  error

	var  goto 132


state 129
	expr : LET REC var var EQ expr and_expr expr .  (12)
	expr : expr . CONS expr  (14)

	CONS  shift 44
	$end  reduce 12
	IN  reduce 12
	THEN  reduce 12
	ELSE  reduce 12
	RPAR  reduce 12
	DSC  reduce 12
	SSC  reduce 12
	EOF  reduce 12
	WITH  reduce 12
	OR  reduce 12
	END  reduce 12
	COMMA  reduce 12
	RBPAR  reduce 12
	AND  reduce 12


state 130
	patterns : OR pattern . ARROW expr patterns  (30)
	patterns : OR pattern . ARROW expr END  (31)
	pattern : pattern . CONS pattern  (38)

	ARROW  shift 133
	CONS  shift 57
	.  error


state 131
	and_command : AND var . var EQ expr and_command  (4)
	and_expr : AND var . var EQ expr and_expr  (17)

	ID  shift 34
	.  error

	var  goto 134


state 132
	and_expr : AND var var . EQ expr and_expr  (17)

	EQ  shift 135
	.  error


state 133
	patterns : OR pattern ARROW . expr patterns  (30)
	patterns : OR pattern ARROW . expr END  (31)

	INT  shift 6
	ID  shift 7
	TRUE  shift 8
	FALSE  shift 9
	LET  shift 10
	IF  shift 11
	LPAR  shift 12
	FUN  shift 13
	MATCH  shift 14
	LBPAR  shift 15
	.  error

	expr  goto 136
	arith_expr  goto 18
	app_expr  goto 19
	atomic_expr  goto 20
	literal  goto 21


state 134
	and_command : AND var var . EQ expr and_command  (4)
	and_expr : AND var var . EQ expr and_expr  (17)

	EQ  shift 137
	.  error


state 135
	and_expr : AND var var EQ . expr and_expr  (17)

	INT  shift 6
	ID  shift 7
	TRUE  shift 8
	FALSE  shift 9
	LET  shift 10
	IF  shift 11
	LPAR  shift 12
	FUN  shift 13
	MATCH  shift 14
	LBPAR  shift 15
	.  error

	expr  goto 138
	arith_expr  goto 18
	app_expr  goto 19
	atomic_expr  goto 20
	literal  goto 21


state 136
	expr : expr . CONS expr  (14)
	patterns : OR pattern ARROW expr . patterns  (30)
	patterns : OR pattern ARROW expr . END  (31)

	OR  shift 121
	END  shift 139
	CONS  shift 44
	.  error

	patterns  goto 140


state 137
	and_command : AND var var EQ . expr and_command  (4)
	and_expr : AND var var EQ . expr and_expr  (17)

	INT  shift 6
	ID  shift 7
	TRUE  shift 8
	FALSE  shift 9
	LET  shift 10
	IF  shift 11
	LPAR  shift 12
	FUN  shift 13
	MATCH  shift 14
	LBPAR  shift 15
	.  error

	expr  goto 141
	arith_expr  goto 18
	app_expr  goto 19
	atomic_expr  goto 20
	literal  goto 21


state 138
	expr : expr . CONS expr  (14)
	and_expr : AND var var EQ expr . and_expr  (17)

	IN  shift 115
	CONS  shift 44
	AND  shift 116
	.  error

	and_expr  goto 142


state 139
	patterns : OR pattern ARROW expr END .  (31)

	.  reduce 31


state 140
	patterns : OR pattern ARROW expr patterns .  (30)

	.  reduce 30


state 141
	and_command : AND var var EQ expr . and_command  (4)
	expr : expr . CONS expr  (14)
	and_expr : AND var var EQ expr . and_expr  (17)

	IN  shift 115
	DSC  shift 124
	CONS  shift 44
	AND  shift 125
	.  error

	and_command  goto 143
	and_expr  goto 142


state 142
	and_expr : AND var var EQ expr and_expr .  (17)

	.  reduce 17


state 143
	and_command : AND var var EQ expr and_command .  (4)

	.  reduce 4


39 terminals, 19 nonterminals
60 grammar rules, 144 states
