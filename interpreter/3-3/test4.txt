fun x -> fun y -> x + (fun x -> if x then 1 else 2) y;;

fun x -> fun y -> y x;;

fun x -> fun y -> fun z -> x z (y z);;

let rec fix f = fun x -> f (fix f) x in
let fact = fix (fun f -> fun x -> if x < 1 then 1 else x * f (x - 1));;

let rec loop x -> loop x;;

let rec f x = x + 1
    and g x = if x then f 1 else f 2
in g true;;

let f = fun x -> 1;;
f 3;;
f;;

let f = fun x -> 1;;
let rec h x = let _ = f 3 in 1 and g x = h x;;
f;;

fun x -> x x;;

fun f -> (f 0 < 1) && f true;;